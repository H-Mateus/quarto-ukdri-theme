---
title: "Quarto R-Ladies Theme"
subtitle: "Inspired in the [xaringan theme](https://www.apreshill.com/slides/rladies-demo-slides.html) made by [Alison Hill](https://www.apreshill.com/) "
author: "[Bea Milz](https://twitter.com/BeaMilz)"
format: 
  revealjs:
    logo: "https://rladies.org/wp-content/uploads/2016/12/R-LadiesGlobal.png"
    footer: "[R-Ladies](https://rladies.org/) theme for [Quarto Presentations](https://quarto.org/docs/presentations/revealjs/index.html). Code available on [GitHub](https://github.com/beatrizmilz/quarto-rladies-theme)."
    theme: ["custom.scss"]
    slide-number: c/t
    show-slide-number: all
---

## Quarto

Quarto enables you to weave together content and executable code into a finished presentation. To learn more about Quarto presentations see <https://quarto.org/docs/presentations/>.

> This is part of the [Quarto documentation](https://quarto.org/docs/presentations/).

## Bullets

When you click the **Render** button a document will be generated that includes:

-   Content authored with markdown
-   Output from executable code

> This is part of the [Quarto documentation](https://quarto.org/docs/presentations/).

## Code

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

> This is part of the [Quarto documentation](https://quarto.org/docs/presentations/).

You can also add `text marked as code`!

## New topic! {.center .center-x background-color="#562457"}

To make a slide like this, use:

```
## Title of slide {.center .center-x background-color="#562457"}

```

## Tabset example

::: panel-tabset
## Example 1

Content here for tabset 1 :)

## Example 2

More content here, for tabset 2 :)
:::

## You can add R code

```{r}
#| echo = TRUE
library(dplyr)
library(ggplot2)
g <- starwars |> 
  ggplot() +
  geom_point(aes(x = height, y = mass)) +
  theme_light()
```

## And show the results aswell :)

```{r}
#| fig.align='center',
#| echo = TRUE
g 
```

## What about tables?

### `knitr::kable()`

```{r}
#| echo = FALSE
tab <- starwars |>
  tidyr::drop_na(species) |> 
  group_by(species) |>
  summarise(n = n(),
            mean_heigth = round(mean(height, na.rm = TRUE)),
            mean_mass = round(mean(mass, na.rm = TRUE))
            ) |> 
  slice_max(order_by = n, n = 4) 

knitr::kable(tab)
```

------------------------------------------------------------------------

## `DT::datatable()` {.smaller}

With the `smaller` class in the slide! Ex: `## slide name {.smaller}`

```{r}
DT::datatable(tab)
```

------------------------------------------------------------------------

## `gt::gt()`

```{r}
gt::gt(tab)
```

------------------------------------------------------------------------

## `reactable::reactable()`

```{r}
reactable::reactable(tab)
```
